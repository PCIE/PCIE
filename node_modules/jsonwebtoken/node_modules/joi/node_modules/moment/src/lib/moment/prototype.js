import {Moment} from "./constructor";
import {add, subtract} from "./add-subtract";
import {calendar} from "./calendar";
import {clone} from "./clone";
import {isBefore, isBetween, isSame, isAfter, isSameOrAfter, isSameOrBefore} from "./compare";
import {diff} from "./diff";
import {format, toString, toISOString} from "./format";
import {from, fromNow} from "./from";
import {to, toNow} from "./to";
import {stringGet, stringSet} from "./get-set";
import {locale, localeData, lang} from "./locale";
import {prototypeMin, prototypeMax} from "./min-max";
import {startOf, endOf} from "./start-end-of";
import {valueOf, toDate, toArray, toObject, toJSON, unix} from "./to-type";
import {isValid, parsingFlags, invalidAt} from "./valid";
import {creationData} from "./creation-data";
import {getSetYear, getIsLeapYear} from "../units/year";
import {getSetWeekYear, getSetISOWeekYear, getWeeksInYear, getISOWeeksInYear} from "../units/week-year";
import {getSetQuarter} from "../units/quarter";
import {getSetMonth, getDaysInMonth} from "../units/month";
import {getSetWeek, getSetISOWeek} from "../units/week";
import {getSetDayOfMonth} from "../units/day-of-month";
import {getSetDayOfWeek, getSetISODayOfWeek, getSetLocaleDayOfWeek} from "../units/day-of-week";
import {getSetDayOfYear} from "../units/day-of-year";
import {getSetHour} from "../units/hour";
import {getSetMinute} from "../units/minute";
import {getSetSecond} from "../units/second";
import {getSetMillisecond} from "../units/millisecond";
import {
    getSetOffset,
    setOffsetToUTC,
    setOffsetToLocal,
    setOffsetToParsedOffset,
    hasAlignedHourOffset,
    isDaylightSavingTime,
    isDaylightSavingTimeShifted,
    getSetZone,
    isLocal,
    isUtcOffset,
    isUtc
} from "../units/offset";
import {getZoneAbbr, getZoneName} from "../units/timezone";
import {deprecate} from "../utils/deprecate";

var proto = Moment.prototype;

proto.add = add;
proto.calendar = calendar;
proto.clone = clone;
proto.diff = diff;
proto.endOf = endOf;
proto.format = format;
proto.from = from;
proto.fromNow = fromNow;
proto.to = to;
proto.toNow = toNow;
proto.get = stringGet;
proto.invalidAt = invalidAt;
proto.isAfter = isAfter;
proto.isBefore = isBefore;
proto.isBetween = isBetween;
proto.isSame = isSame;
proto.isSameOrAfter = isSameOrAfter;
proto.isSameOrBefore = isSameOrBefore;
proto.isValid = isValid;
proto.lang = lang;
proto.locale = locale;
proto.localeData = localeData;
proto.max = prototypeMax;
proto.min = prototypeMin;
proto.parsingFlags = parsingFlags;
proto.set = stringSet;
proto.startOf = startOf;
proto.subtract = subtract;
proto.toArray = toArray;
proto.toObject = toObject;
proto.toDate = toDate;
proto.toISOString = toISOString;
proto.toJSON = toJSON;
proto.toString = toString;
proto.unix = unix;
proto.valueOf = valueOf;
proto.creationData = creationData;

// Year
proto.year = getSetYear;
proto.isLeapYear = getIsLeapYear;

// Week Year
proto.weekYear = getSetWeekYear;
proto.isoWeekYear = getSetISOWeekYear;

// Quarter
proto.quarter = proto.quarters = getSetQuarter;

// Month
proto.month = getSetMonth;
proto.daysInMonth = getDaysInMonth;

// Week
proto.week = proto.weeks = getSetWeek;
proto.isoWeek = proto.isoWeeks = getSetISOWeek;
proto.weeksInYear = getWeeksInYear;
proto.isoWeeksInYear = getISOWeeksInYear;

// Day
proto.date = getSetDayOfMonth;
proto.day = proto.days = getSetDayOfWeek;
proto.weekday = getSetLocaleDayOfWeek;
proto.isoWeekday = getSetISODayOfWeek;
proto.dayOfYear = getSetDayOfYear;

// Hour
proto.hour = proto.hours = getSetHour;

// Minute
proto.minute = proto.minutes = getSetMinute;

// Second
proto.second = proto.seconds = getSetSecond;

// Millisecond
proto.millisecond = proto.milliseconds = getSetMillisecond;

// Offset
proto.utcOffset = getSetOffset;
proto.utc = setOffsetToUTC;
proto.local = setOffsetToLocal;
proto.parseZone = setOffsetToParsedOffset;
proto.hasAlignedHourOffset = hasAlignedHourOffset;
proto.isDST = isDaylightSavingTime;
proto.isLocal = isLocal;
proto.isUtcOffset = isUtcOffset;
proto.isUtc = isUtc;
proto.isUTC = isUtc;

// Timezone
proto.zoneAbbr = getZoneAbbr;
proto.zoneName = getZoneName;

// Deprecations
proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);
proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);
proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);

export default proto;
